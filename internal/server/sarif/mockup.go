package sarif

var MockGosecReport = "{
	"runs": [
		{
			"results": [
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "main.go"
								},
								"region": {
									"endColumn": 2,
									"endLine": 33,
									"snippet": {
										"text": "http.ListenAndServe(\":8080\", nil)"
									},
									"sourceLanguage": "go",
									"startColumn": 2,
									"startLine": 33
								}
							}
						}
					],
					"message": {
						"text": "Use of net/http serve function that has no support for setting timeouts"
					},
					"ruleId": "G114"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "main.go"
								},
								"region": {
									"endColumn": 15,
									"endLine": 113,
									"snippet": {
										"text": "data, err := ioutil.ReadFile(filePath)"
									},
									"sourceLanguage": "go",
									"startColumn": 15,
									"startLine": 113
								}
							}
						}
					],
					"message": {
						"text": "Potential file inclusion via variable"
					},
					"ruleId": "G304"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "main.go"
								},
								"region": {
									"endColumn": 15,
									"endLine": 92,
									"snippet": {
										"text": "data, err := ioutil.ReadFile(filePath)"
									},
									"sourceLanguage": "go",
									"startColumn": 15,
									"startLine": 92
								}
							}
						}
					],
					"message": {
						"text": "Potential file inclusion via variable"
					},
					"ruleId": "G304"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "main.go"
								},
								"region": {
									"endColumn": 2,
									"endLine": 21,
									"snippet": {
										"text": "os.Mkdir(dataDir, 0755)"
									},
									"sourceLanguage": "go",
									"startColumn": 2,
									"startLine": 21
								}
							}
						}
					],
					"message": {
						"text": "Expect directory permissions to be 0750 or less"
					},
					"ruleId": "G301"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "main.go"
								},
								"region": {
									"endColumn": 8,
									"endLine": 133,
									"snippet": {
										"text": "err = ioutil.WriteFile(filePath, updatedData, 0644)"
									},
									"sourceLanguage": "go",
									"startColumn": 8,
									"startLine": 133
								}
							}
						}
					],
					"message": {
						"text": "Expect WriteFile permissions to be 0600 or less"
					},
					"ruleId": "G306"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "main.go"
								},
								"region": {
									"endColumn": 8,
									"endLine": 74,
									"snippet": {
										"text": "err = ioutil.WriteFile(filePath, data, 0644)"
									},
									"sourceLanguage": "go",
									"startColumn": 8,
									"startLine": 74
								}
							}
						}
					],
					"message": {
						"text": "Expect WriteFile permissions to be 0600 or less"
					},
					"ruleId": "G306"
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "main.go"
								},
								"region": {
									"endColumn": 2,
									"endLine": 99,
									"snippet": {
										"text": "w.Write(data)"
									},
									"sourceLanguage": "go",
									"startColumn": 2,
									"startLine": 99
								}
							}
						}
					],
					"message": {
						"text": "Errors unhandled."
					},
					"ruleId": "G104"
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "main.go"
								},
								"region": {
									"endColumn": 2,
									"endLine": 50,
									"snippet": {
										"text": "json.NewEncoder(w).Encode(notebooks)"
									},
									"sourceLanguage": "go",
									"startColumn": 2,
									"startLine": 50
								}
							}
						}
					],
					"message": {
						"text": "Errors unhandled."
					},
					"ruleId": "G104"
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "main.go"
								},
								"region": {
									"endColumn": 2,
									"endLine": 33,
									"snippet": {
										"text": "http.ListenAndServe(\":8080\", nil)"
									},
									"sourceLanguage": "go",
									"startColumn": 2,
									"startLine": 33
								}
							}
						}
					],
					"message": {
						"text": "Errors unhandled."
					},
					"ruleId": "G104"
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "main.go"
								},
								"region": {
									"endColumn": 2,
									"endLine": 21,
									"snippet": {
										"text": "os.Mkdir(dataDir, 0755)"
									},
									"sourceLanguage": "go",
									"startColumn": 2,
									"startLine": 21
								}
							}
						}
					],
					"message": {
						"text": "Errors unhandled."
					},
					"ruleId": "G104"
				}
			],
			"taxonomies": [
				{
					"downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.4.xml.zip",
					"guid": "f2856fc0-85b7-373f-83e7-6f8582243547",
					"informationUri": "https://cwe.mitre.org/data/published/cwe_v4.4.pdf/",
					"isComprehensive": true,
					"language": "en",
					"minimumRequiredLocalizedDataSemanticVersion": "4.4",
					"name": "CWE",
					"organization": "MITRE",
					"releaseDateUtc": "2021-03-15",
					"shortDescription": {
						"text": "The MITRE Common Weakness Enumeration"
					},
					"taxa": [
						{
							"fullDescription": {
								"text": "The software uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the software does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory."
							},
							"guid": "3e718404-88bc-3f17-883e-e85e74078a76",
							"helpUri": "https://cwe.mitre.org/data/definitions/22.html",
							"id": "22",
							"shortDescription": {
								"text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
							}
						},
						{
							"fullDescription": {
								"text": "During installation, installed file permissions are set to allow anyone to modify those files."
							},
							"guid": "fca8970d-b44c-3162-a385-cc09266d12a4",
							"helpUri": "https://cwe.mitre.org/data/definitions/276.html",
							"id": "276",
							"shortDescription": {
								"text": "Incorrect Default Permissions"
							}
						},
						{
							"fullDescription": {
								"text": "The program invokes a potentially dangerous function that could introduce a vulnerability if it is used incorrectly, but the function can also be used safely."
							},
							"guid": "f97fef5f-b85b-3d63-9932-7053f298803d",
							"helpUri": "https://cwe.mitre.org/data/definitions/676.html",
							"id": "676",
							"shortDescription": {
								"text": "Use of Potentially Dangerous Function"
							}
						},
						{
							"fullDescription": {
								"text": "The software does not properly anticipate or handle exceptional conditions that rarely occur during normal operation of the software."
							},
							"guid": "7df38d1d-038e-3ced-8601-8d9265b90a25",
							"helpUri": "https://cwe.mitre.org/data/definitions/703.html",
							"id": "703",
							"shortDescription": {
								"text": "Improper Check or Handling of Exceptional Conditions"
							}
						}
					],
					"version": "4.4"
				}
			],
			"tool": {
				"driver": {
					"guid": "8b518d5f-906d-39f9-894b-d327b1a421c5",
					"informationUri": "https://github.com/securego/gosec/",
					"name": "gosec",
					"rules": [
						{
							"defaultConfiguration": {
								"level": "warning"
							},
							"fullDescription": {
								"text": "Errors unhandled."
							},
							"help": {
								"text": "Errors unhandled.\nSeverity: LOW\nConfidence: HIGH\n"
							},
							"id": "G104",
							"name": "Improper Check or Handling of Exceptional Conditions",
							"properties": {
								"precision": "high",
								"tags": [
									"security",
									"LOW"
								]
							},
							"relationships": [
								{
									"kinds": [
										"superset"
									],
									"target": {
										"guid": "7df38d1d-038e-3ced-8601-8d9265b90a25",
										"id": "703",
										"toolComponent": {
											"guid": "f2856fc0-85b7-373f-83e7-6f8582243547",
											"name": "CWE"
										}
									}
								}
							],
							"shortDescription": {
								"text": "Errors unhandled."
							}
						},
						{
							"defaultConfiguration": {
								"level": "error"
							},
							"fullDescription": {
								"text": "Expect WriteFile permissions to be 0600 or less"
							},
							"help": {
								"text": "Expect WriteFile permissions to be 0600 or less\nSeverity: MEDIUM\nConfidence: HIGH\n"
							},
							"id": "G306",
							"name": "Incorrect Default Permissions",
							"properties": {
								"precision": "high",
								"tags": [
									"security",
									"MEDIUM"
								]
							},
							"relationships": [
								{
									"kinds": [
										"superset"
									],
									"target": {
										"guid": "fca8970d-b44c-3162-a385-cc09266d12a4",
										"id": "276",
										"toolComponent": {
											"guid": "f2856fc0-85b7-373f-83e7-6f8582243547",
											"name": "CWE"
										}
									}
								}
							],
							"shortDescription": {
								"text": "Expect WriteFile permissions to be 0600 or less"
							}
						},
						{
							"defaultConfiguration": {
								"level": "error"
							},
							"fullDescription": {
								"text": "Expect directory permissions to be 0750 or less"
							},
							"help": {
								"text": "Expect directory permissions to be 0750 or less\nSeverity: MEDIUM\nConfidence: HIGH\n"
							},
							"id": "G301",
							"name": "Incorrect Default Permissions",
							"properties": {
								"precision": "high",
								"tags": [
									"security",
									"MEDIUM"
								]
							},
							"relationships": [
								{
									"kinds": [
										"superset"
									],
									"target": {
										"guid": "fca8970d-b44c-3162-a385-cc09266d12a4",
										"id": "276",
										"toolComponent": {
											"guid": "f2856fc0-85b7-373f-83e7-6f8582243547",
											"name": "CWE"
										}
									}
								}
							],
							"shortDescription": {
								"text": "Expect directory permissions to be 0750 or less"
							}
						},
						{
							"defaultConfiguration": {
								"level": "error"
							},
							"fullDescription": {
								"text": "Potential file inclusion via variable"
							},
							"help": {
								"text": "Potential file inclusion via variable\nSeverity: MEDIUM\nConfidence: HIGH\n"
							},
							"id": "G304",
							"name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
							"properties": {
								"precision": "high",
								"tags": [
									"security",
									"MEDIUM"
								]
							},
							"relationships": [
								{
									"kinds": [
										"superset"
									],
									"target": {
										"guid": "3e718404-88bc-3f17-883e-e85e74078a76",
										"id": "22",
										"toolComponent": {
											"guid": "f2856fc0-85b7-373f-83e7-6f8582243547",
											"name": "CWE"
										}
									}
								}
							],
							"shortDescription": {
								"text": "Potential file inclusion via variable"
							}
						},
						{
							"defaultConfiguration": {
								"level": "error"
							},
							"fullDescription": {
								"text": "Use of net/http serve function that has no support for setting timeouts"
							},
							"help": {
								"text": "Use of net/http serve function that has no support for setting timeouts\nSeverity: MEDIUM\nConfidence: HIGH\n"
							},
							"id": "G114",
							"name": "Use of Potentially Dangerous Function",
							"properties": {
								"precision": "high",
								"tags": [
									"security",
									"MEDIUM"
								]
							},
							"relationships": [
								{
									"kinds": [
										"superset"
									],
									"target": {
										"guid": "f97fef5f-b85b-3d63-9932-7053f298803d",
										"id": "676",
										"toolComponent": {
											"guid": "f2856fc0-85b7-373f-83e7-6f8582243547",
											"name": "CWE"
										}
									}
								}
							],
							"shortDescription": {
								"text": "Use of net/http serve function that has no support for setting timeouts"
							}
						}
					],
					"semanticVersion": "dev",
					"supportedTaxonomies": [
						{
							"guid": "f2856fc0-85b7-373f-83e7-6f8582243547",
							"name": "CWE"
						}
					],
					"version": "dev"
				}
			}
		}
	],
	"$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/main/sarif-2.1/schema/sarif-schema-2.1.0.json",
	"version": "2.1.0"
}"

var MockGovulncheckReport = "{
  "version": "2.1.0",
  "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "govulncheck",
          "semanticVersion": "v1.1.3",
          "informationUri": "https://pkg.go.dev/golang.org/x/vuln/cmd/govulncheck",
          "properties": {
            "protocol_version": "v1.0.0",
            "scanner_name": "govulncheck",
            "scanner_version": "v1.1.3",
            "db": "https://vuln.go.dev",
            "db_last_modified": "2024-12-20T21:48:20Z",
            "go_version": "go1.22.0",
            "scan_level": "symbol",
            "scan_mode": "source"
          },
          "rules": [
            {
              "id": "GO-2024-2598",
              "shortDescription": {
                "text": "[GO-2024-2598] Verify panics on certificates with an unknown public key algorithm in crypto/x509"
              },
              "fullDescription": {
                "text": "Verify panics on certificates with an unknown public key algorithm in crypto/x509"
              },
              "help": {
                "text": "Verifying a certificate chain which contains a certificate with an unknown public key algorithm will cause Certificate.Verify to panic.\n\nThis affects all crypto/tls clients, and servers that set Config.ClientAuth to VerifyClientCertIfGiven or RequireAndVerifyClientCert. The default behavior is for TLS servers to not verify client certificates."
              },
              "helpUri": "https://pkg.go.dev/vuln/GO-2024-2598",
              "properties": {
                "tags": [
                  "CVE-2024-24783"
                ]
              }
            },
            {
              "id": "GO-2024-2599",
              "shortDescription": {
                "text": "[GO-2024-2599] Memory exhaustion in multipart form parsing in net/textproto and net/http"
              },
              "fullDescription": {
                "text": "Memory exhaustion in multipart form parsing in net/textproto and net/http"
              },
              "help": {
                "text": "When parsing a multipart form (either explicitly with Request.ParseMultipartForm or implicitly with Request.FormValue, Request.PostFormValue, or Request.FormFile), limits on the total size of the parsed form were not applied to the memory consumed while reading a single form line. This permits a maliciously crafted input containing very long lines to cause allocation of arbitrarily large amounts of memory, potentially leading to memory exhaustion.\n\nWith fix, the ParseMultipartForm function now correctly limits the maximum size of form lines."
              },
              "helpUri": "https://pkg.go.dev/vuln/GO-2024-2599",
              "properties": {
                "tags": [
                  "CVE-2023-45290"
                ]
              }
            },
            {
              "id": "GO-2024-2600",
              "shortDescription": {
                "text": "[GO-2024-2600] Incorrect forwarding of sensitive headers and cookies on HTTP redirect in net/http"
              },
              "fullDescription": {
                "text": "Incorrect forwarding of sensitive headers and cookies on HTTP redirect in net/http"
              },
              "help": {
                "text": "When following an HTTP redirect to a domain which is not a subdomain match or exact match of the initial domain, an http.Client does not forward sensitive headers such as \"Authorization\" or \"Cookie\". For example, a redirect from foo.com to www.foo.com will forward the Authorization header, but a redirect to bar.com will not.\n\nA maliciously crafted HTTP redirect could cause sensitive headers to be unexpectedly forwarded."
              },
              "helpUri": "https://pkg.go.dev/vuln/GO-2024-2600",
              "properties": {
                "tags": [
                  "CVE-2023-45289"
                ]
              }
            },
            {
              "id": "GO-2024-2609",
              "shortDescription": {
                "text": "[GO-2024-2609] Comments in display names are incorrectly handled in net/mail"
              },
              "fullDescription": {
                "text": "Comments in display names are incorrectly handled in net/mail"
              },
              "help": {
                "text": "The ParseAddressList function incorrectly handles comments (text within parentheses) within display names. Since this is a misalignment with conforming address parsers, it can result in different trust decisions being made by programs using different parsers."
              },
              "helpUri": "https://pkg.go.dev/vuln/GO-2024-2609",
              "properties": {
                "tags": [
                  "CVE-2024-24784"
                ]
              }
            },
            {
              "id": "GO-2024-2610",
              "shortDescription": {
                "text": "[GO-2024-2610] Errors returned from JSON marshaling may break template escaping in html/template"
              },
              "fullDescription": {
                "text": "Errors returned from JSON marshaling may break template escaping in html/template"
              },
              "help": {
                "text": "If errors returned from MarshalJSON methods contain user controlled data, they may be used to break the contextual auto-escaping behavior of the html/template package, allowing for subsequent actions to inject unexpected content into templates."
              },
              "helpUri": "https://pkg.go.dev/vuln/GO-2024-2610",
              "properties": {
                "tags": [
                  "CVE-2024-24785"
                ]
              }
            },
            {
              "id": "GO-2024-2687",
              "shortDescription": {
                "text": "[GO-2024-2687] HTTP/2 CONTINUATION flood in net/http"
              },
              "fullDescription": {
                "text": "HTTP/2 CONTINUATION flood in net/http"
              },
              "help": {
                "text": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames.\n\nMaintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed.\n\nThis permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send.\n\nThe fix sets a limit on the amount of excess header frames we will process before closing a connection."
              },
              "helpUri": "https://pkg.go.dev/vuln/GO-2024-2687",
              "properties": {
                "tags": [
                  "CVE-2023-45288",
                  "GHSA-4v7x-pqxf-cx7m"
                ]
              }
            },
            {
              "id": "GO-2024-2824",
              "shortDescription": {
                "text": "[GO-2024-2824] Malformed DNS message can cause infinite loop in net"
              },
              "fullDescription": {
                "text": "Malformed DNS message can cause infinite loop in net"
              },
              "help": {
                "text": "A malformed DNS message in response to a query can cause the Lookup functions to get stuck in an infinite loop."
              },
              "helpUri": "https://pkg.go.dev/vuln/GO-2024-2824",
              "properties": {
                "tags": [
                  "CVE-2024-24788"
                ]
              }
            },
            {
              "id": "GO-2024-2887",
              "shortDescription": {
                "text": "[GO-2024-2887] Unexpected behavior from Is methods for IPv4-mapped IPv6 addresses in net/netip"
              },
              "fullDescription": {
                "text": "Unexpected behavior from Is methods for IPv4-mapped IPv6 addresses in net/netip"
              },
              "help": {
                "text": "The various Is methods (IsPrivate, IsLoopback, etc) did not work as expected for IPv4-mapped IPv6 addresses, returning false for addresses which would return true in their traditional IPv4 forms."
              },
              "helpUri": "https://pkg.go.dev/vuln/GO-2024-2887",
              "properties": {
                "tags": [
                  "CVE-2024-24790"
                ]
              }
            },
            {
              "id": "GO-2024-2888",
              "shortDescription": {
                "text": "[GO-2024-2888] Mishandling of corrupt central directory record in archive/zip"
              },
              "fullDescription": {
                "text": "Mishandling of corrupt central directory record in archive/zip"
              },
              "help": {
                "text": "The archive/zip package's handling of certain types of invalid zip files differs from the behavior of most zip implementations. This misalignment could be exploited to create an zip file with contents that vary depending on the implementation reading the file. The archive/zip package now rejects files containing these errors."
              },
              "helpUri": "https://pkg.go.dev/vuln/GO-2024-2888",
              "properties": {
                "tags": [
                  "CVE-2024-24789"
                ]
              }
            },
            {
              "id": "GO-2024-2963",
              "shortDescription": {
                "text": "[GO-2024-2963] Denial of service due to improper 100-continue handling in net/http"
              },
              "fullDescription": {
                "text": "Denial of service due to improper 100-continue handling in net/http"
              },
              "help": {
                "text": "The net/http HTTP/1.1 client mishandled the case where a server responds to a request with an \"Expect: 100-continue\" header with a non-informational (200 or higher) status. This mishandling could leave a client connection in an invalid state, where the next request sent on the connection will fail.\n\nAn attacker sending a request to a net/http/httputil.ReverseProxy proxy can exploit this mishandling to cause a denial of service by sending \"Expect: 100-continue\" requests which elicit a non-informational response from the backend. Each such request leaves the proxy with an invalid connection, and causes one subsequent request using that connection to fail."
              },
              "helpUri": "https://pkg.go.dev/vuln/GO-2024-2963",
              "properties": {
                "tags": [
                  "CVE-2024-24791"
                ]
              }
            },
            {
              "id": "GO-2024-3105",
              "shortDescription": {
                "text": "[GO-2024-3105] Stack exhaustion in all Parse functions in go/parser"
              },
              "fullDescription": {
                "text": "Stack exhaustion in all Parse functions in go/parser"
              },
              "help": {
                "text": "Calling any of the Parse functions on Go source code which contains deeply nested literals can cause a panic due to stack exhaustion."
              },
              "helpUri": "https://pkg.go.dev/vuln/GO-2024-3105",
              "properties": {
                "tags": [
                  "CVE-2024-34155"
                ]
              }
            },
            {
              "id": "GO-2024-3106",
              "shortDescription": {
                "text": "[GO-2024-3106] Stack exhaustion in Decoder.Decode in encoding/gob"
              },
              "fullDescription": {
                "text": "Stack exhaustion in Decoder.Decode in encoding/gob"
              },
              "help": {
                "text": "Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion. This is a follow-up to CVE-2022-30635."
              },
              "helpUri": "https://pkg.go.dev/vuln/GO-2024-3106",
              "properties": {
                "tags": [
                  "CVE-2024-34156"
                ]
              }
            },
            {
              "id": "GO-2024-3107",
              "shortDescription": {
                "text": "[GO-2024-3107] Stack exhaustion in Parse in go/build/constraint"
              },
              "fullDescription": {
                "text": "Stack exhaustion in Parse in go/build/constraint"
              },
              "help": {
                "text": "Calling Parse on a \"// +build\" build tag line with deeply nested expressions can cause a panic due to stack exhaustion."
              },
              "helpUri": "https://pkg.go.dev/vuln/GO-2024-3107",
              "properties": {
                "tags": [
                  "CVE-2024-34158"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "GO-2024-2598",
          "level": "error",
          "message": {
            "text": "Your code calls vulnerable functions in 1 package (crypto/x509)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "go.mod",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1
                }
              },
              "message": {
                "text": "Findings for vulnerability GO-2024-2598"
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "module": "read-it-later@",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 7,
                            "startColumn": 2
                          }
                        },
                        "message": {
                          "text": "read-it-later.init"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/http/h2_bundle.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 3064,
                            "startColumn": 37
                          }
                        },
                        "message": {
                          "text": "net/http.init"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/os/env.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "startColumn": 24
                          }
                        },
                        "message": {
                          "text": "os.Getenv"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/crypto/x509/verify.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 748,
                            "startColumn": 23
                          }
                        },
                        "message": {
                          "text": "crypto/x509.*Certificate.Verify"
                        }
                      }
                    }
                  ]
                }
              ],
              "message": {
                "text": "A summarized code flow for vulnerable function crypto/x509.*Certificate.Verify"
              }
            }
          ],
          "stacks": [
            {
              "message": {
                "text": "A call stack for vulnerable function crypto/x509.*Certificate.Verify"
              },
              "frames": [
                {
                  "module": "read-it-later@",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "main.go",
                        "uriBaseId": "%SRCROOT%"
                      },
                      "region": {
                        "startLine": 7,
                        "startColumn": 2
                      }
                    },
                    "message": {
                      "text": "read-it-later.init"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/h2_bundle.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 3064,
                        "startColumn": 37
                      }
                    },
                    "message": {
                      "text": "net/http.init"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/os/env.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 103,
                        "startColumn": 24
                      }
                    },
                    "message": {
                      "text": "os.Getenv"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/syscall/env_unix.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 70,
                        "startColumn": 12
                      }
                    },
                    "message": {
                      "text": "syscall.Getenv"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/sync/once.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 65,
                        "startColumn": 11
                      }
                    },
                    "message": {
                      "text": "sync.*Once.Do"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/sync/once.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 74,
                        "startColumn": 4
                      }
                    },
                    "message": {
                      "text": "sync.*Once.doSlow"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/port_unix.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 25,
                        "startColumn": 31
                      }
                    },
                    "message": {
                      "text": "net.readServices"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/parse.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 55,
                        "startColumn": 24
                      }
                    },
                    "message": {
                      "text": "net.*file.readLine"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/io/io.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 354,
                        "startColumn": 20
                      }
                    },
                    "message": {
                      "text": "io.ReadFull"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/io/io.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 335,
                        "startColumn": 19
                      }
                    },
                    "message": {
                      "text": "io.ReadAtLeast"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/crypto/tls/conn.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 1374,
                        "startColumn": 42
                      }
                    },
                    "message": {
                      "text": "crypto/tls.*Conn.Read"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/crypto/tls/conn.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 1286,
                        "startColumn": 31
                      }
                    },
                    "message": {
                      "text": "crypto/tls.*Conn.handlePostHandshakeMessage"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/crypto/tls/conn.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 1276,
                        "startColumn": 39
                      }
                    },
                    "message": {
                      "text": "crypto/tls.*Conn.handleRenegotiation"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/crypto/tls/handshake_client.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 263,
                        "startColumn": 22
                      }
                    },
                    "message": {
                      "text": "crypto/tls.*Conn.clientHandshake"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/crypto/tls/handshake_client_tls13.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 96,
                        "startColumn": 36
                      }
                    },
                    "message": {
                      "text": "crypto/tls.*clientHandshakeStateTLS13.handshake"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/crypto/tls/handshake_client_tls13.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 531,
                        "startColumn": 37
                      }
                    },
                    "message": {
                      "text": "crypto/tls.*clientHandshakeStateTLS13.readServerCertificate"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/crypto/tls/handshake_client.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 997,
                        "startColumn": 42
                      }
                    },
                    "message": {
                      "text": "crypto/tls.*Conn.verifyServerCertificate"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/crypto/x509/verify.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 748,
                        "startColumn": 23
                      }
                    },
                    "message": {
                      "text": "crypto/x509.*Certificate.Verify"
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "ruleId": "GO-2024-2599",
          "level": "error",
          "message": {
            "text": "Your code calls vulnerable functions in 1 package (net/textproto)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "go.mod",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1
                }
              },
              "message": {
                "text": "Findings for vulnerability GO-2024-2599"
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "module": "read-it-later@",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 33,
                            "startColumn": 21
                          }
                        },
                        "message": {
                          "text": "read-it-later.main"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/http/server.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 3438,
                            "startColumn": 30
                          }
                        },
                        "message": {
                          "text": "net/http.ListenAndServe"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/http/server.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 3184,
                            "startColumn": 18
                          }
                        },
                        "message": {
                          "text": "net/http.*Server.ListenAndServe"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/textproto/reader.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "startColumn": 18
                          }
                        },
                        "message": {
                          "text": "net/textproto.*Reader.ReadLine"
                        }
                      }
                    }
                  ]
                }
              ],
              "message": {
                "text": "A summarized code flow for vulnerable function net/textproto.*Reader.ReadLine"
              }
            },
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "module": "read-it-later@",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 33,
                            "startColumn": 21
                          }
                        },
                        "message": {
                          "text": "read-it-later.main"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/http/server.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 3438,
                            "startColumn": 30
                          }
                        },
                        "message": {
                          "text": "net/http.ListenAndServe"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/http/server.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 3184,
                            "startColumn": 18
                          }
                        },
                        "message": {
                          "text": "net/http.*Server.ListenAndServe"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/textproto/reader.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 481,
                            "startColumn": 18
                          }
                        },
                        "message": {
                          "text": "net/textproto.*Reader.ReadMIMEHeader"
                        }
                      }
                    }
                  ]
                }
              ],
              "message": {
                "text": "A summarized code flow for vulnerable function net/textproto.*Reader.ReadMIMEHeader"
              }
            }
          ],
          "stacks": [
            {
              "message": {
                "text": "A call stack for vulnerable function net/textproto.*Reader.ReadLine"
              },
              "frames": [
                {
                  "module": "read-it-later@",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "main.go",
                        "uriBaseId": "%SRCROOT%"
                      },
                      "region": {
                        "startLine": 33,
                        "startColumn": 21
                      }
                    },
                    "message": {
                      "text": "read-it-later.main"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/server.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 3438,
                        "startColumn": 30
                      }
                    },
                    "message": {
                      "text": "net/http.ListenAndServe"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/server.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 3184,
                        "startColumn": 18
                      }
                    },
                    "message": {
                      "text": "net/http.*Server.ListenAndServe"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/server.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 3285,
                        "startColumn": 3
                      }
                    },
                    "message": {
                      "text": "net/http.*Server.Serve"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/server.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 1964,
                        "startColumn": 26
                      }
                    },
                    "message": {
                      "text": "net/http.*conn.serve"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/server.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 1004,
                        "startColumn": 25
                      }
                    },
                    "message": {
                      "text": "net/http.*conn.readRequest"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/request.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 1059,
                        "startColumn": 25
                      }
                    },
                    "message": {
                      "text": "net/http.readRequest"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/textproto/reader.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 38,
                        "startColumn": 18
                      }
                    },
                    "message": {
                      "text": "net/textproto.*Reader.ReadLine"
                    }
                  }
                }
              ]
            },
            {
              "message": {
                "text": "A call stack for vulnerable function net/textproto.*Reader.ReadMIMEHeader"
              },
              "frames": [
                {
                  "module": "read-it-later@",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "main.go",
                        "uriBaseId": "%SRCROOT%"
                      },
                      "region": {
                        "startLine": 33,
                        "startColumn": 21
                      }
                    },
                    "message": {
                      "text": "read-it-later.main"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/server.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 3438,
                        "startColumn": 30
                      }
                    },
                    "message": {
                      "text": "net/http.ListenAndServe"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/server.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 3184,
                        "startColumn": 18
                      }
                    },
                    "message": {
                      "text": "net/http.*Server.ListenAndServe"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/server.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 3285,
                        "startColumn": 3
                      }
                    },
                    "message": {
                      "text": "net/http.*Server.Serve"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/server.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 1964,
                        "startColumn": 26
                      }
                    },
                    "message": {
                      "text": "net/http.*conn.serve"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/server.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 1004,
                        "startColumn": 25
                      }
                    },
                    "message": {
                      "text": "net/http.*conn.readRequest"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/request.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 1105,
                        "startColumn": 38
                      }
                    },
                    "message": {
                      "text": "net/http.readRequest"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/textproto/reader.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 481,
                        "startColumn": 18
                      }
                    },
                    "message": {
                      "text": "net/textproto.*Reader.ReadMIMEHeader"
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "ruleId": "GO-2024-2600",
          "level": "warning",
          "message": {
            "text": "Your code imports 1 vulnerable package (net/http), but doesn’t appear to call any of the vulnerable symbols."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "go.mod",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1
                }
              },
              "message": {
                "text": "Findings for vulnerability GO-2024-2600"
              }
            }
          ]
        },
        {
          "ruleId": "GO-2024-2609",
          "level": "note",
          "message": {
            "text": "Your code depends on 1 vulnerable module (stdlib), but doesn't appear to call any of the vulnerable symbols."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "go.mod",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1
                }
              },
              "message": {
                "text": "Findings for vulnerability GO-2024-2609"
              }
            }
          ]
        },
        {
          "ruleId": "GO-2024-2610",
          "level": "note",
          "message": {
            "text": "Your code depends on 1 vulnerable module (stdlib), but doesn't appear to call any of the vulnerable symbols."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "go.mod",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1
                }
              },
              "message": {
                "text": "Findings for vulnerability GO-2024-2610"
              }
            }
          ]
        },
        {
          "ruleId": "GO-2024-2687",
          "level": "error",
          "message": {
            "text": "Your code calls vulnerable functions in 1 package (net/http)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "go.mod",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1
                }
              },
              "message": {
                "text": "Findings for vulnerability GO-2024-2687"
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "module": "read-it-later@",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 7,
                            "startColumn": 2
                          }
                        },
                        "message": {
                          "text": "read-it-later.init"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/http/h2_bundle.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 3064,
                            "startColumn": 37
                          }
                        },
                        "message": {
                          "text": "net/http.init"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/os/env.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "startColumn": 24
                          }
                        },
                        "message": {
                          "text": "os.Getenv"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/http/transport.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 2821,
                            "startColumn": 26
                          }
                        },
                        "message": {
                          "text": "net/http.*bodyEOFSignal.Read"
                        }
                      }
                    }
                  ]
                }
              ],
              "message": {
                "text": "A summarized code flow for vulnerable function net/http.*bodyEOFSignal.Read"
              }
            },
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "module": "read-it-later@",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 7,
                            "startColumn": 2
                          }
                        },
                        "message": {
                          "text": "read-it-later.init"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/http/h2_bundle.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 3064,
                            "startColumn": 37
                          }
                        },
                        "message": {
                          "text": "net/http.init"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/os/env.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "startColumn": 24
                          }
                        },
                        "message": {
                          "text": "os.Getenv"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/http/server.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 761,
                            "startColumn": 23
                          }
                        },
                        "message": {
                          "text": "net/http.*connReader.Read"
                        }
                      }
                    }
                  ]
                }
              ],
              "message": {
                "text": "A summarized code flow for vulnerable function net/http.*connReader.Read"
              }
            },
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "module": "read-it-later@",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "startColumn": 13
                          }
                        },
                        "message": {
                          "text": "read-it-later.main"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/fmt/print.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 314,
                            "startColumn": 17
                          }
                        },
                        "message": {
                          "text": "fmt.Println"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/fmt/print.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 305,
                            "startColumn": 18
                          }
                        },
                        "message": {
                          "text": "fmt.Fprintln"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/http/h2_bundle.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 6737,
                            "startColumn": 31
                          }
                        },
                        "message": {
                          "text": "net/http.*http2responseWriter.Write"
                        }
                      }
                    }
                  ]
                }
              ],
              "message": {
                "text": "A summarized code flow for vulnerable function net/http.*http2responseWriter.Write"
              }
            },
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "module": "read-it-later@",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 7,
                            "startColumn": 2
                          }
                        },
                        "message": {
                          "text": "read-it-later.init"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/http/h2_bundle.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 3064,
                            "startColumn": 37
                          }
                        },
                        "message": {
                          "text": "net/http.init"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/os/env.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "startColumn": 24
                          }
                        },
                        "message": {
                          "text": "os.Getenv"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/http/h2_bundle.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 6741,
                            "startColumn": 31
                          }
                        },
                        "message": {
                          "text": "net/http.*http2responseWriter.WriteString"
                        }
                      }
                    }
                  ]
                }
              ],
              "message": {
                "text": "A summarized code flow for vulnerable function net/http.*http2responseWriter.WriteString"
              }
            },
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "module": "read-it-later@",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "startColumn": 13
                          }
                        },
                        "message": {
                          "text": "read-it-later.main"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/fmt/print.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 314,
                            "startColumn": 17
                          }
                        },
                        "message": {
                          "text": "fmt.Println"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/fmt/print.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 304,
                            "startColumn": 13
                          }
                        },
                        "message": {
                          "text": "fmt.Fprintln"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/http/h2_bundle.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 10353,
                            "startColumn": 26
                          }
                        },
                        "message": {
                          "text": "net/http.*http2writeData.String"
                        }
                      }
                    }
                  ]
                }
              ],
              "message": {
                "text": "A summarized code flow for vulnerable function net/http.*http2writeData.String"
              }
            },
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "module": "read-it-later@",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 7,
                            "startColumn": 2
                          }
                        },
                        "message": {
                          "text": "read-it-later.init"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/http/h2_bundle.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 3064,
                            "startColumn": 37
                          }
                        },
                        "message": {
                          "text": "net/http.init"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/os/env.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "startColumn": 24
                          }
                        },
                        "message": {
                          "text": "os.Getenv"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/http/server.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 3696,
                            "startColumn": 30
                          }
                        },
                        "message": {
                          "text": "net/http.*onceCloseListener.Close"
                        }
                      }
                    }
                  ]
                }
              ],
              "message": {
                "text": "A summarized code flow for vulnerable function net/http.*onceCloseListener.Close"
              }
            },
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "module": "read-it-later@",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "startColumn": 13
                          }
                        },
                        "message": {
                          "text": "read-it-later.main"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/fmt/print.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 314,
                            "startColumn": 17
                          }
                        },
                        "message": {
                          "text": "fmt.Println"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/fmt/print.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 305,
                            "startColumn": 18
                          }
                        },
                        "message": {
                          "text": "fmt.Fprintln"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/http/server.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 1610,
                            "startColumn": 20
                          }
                        },
                        "message": {
                          "text": "net/http.*response.Write"
                        }
                      }
                    }
                  ]
                }
              ],
              "message": {
                "text": "A summarized code flow for vulnerable function net/http.*response.Write"
              }
            },
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "module": "read-it-later@",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 7,
                            "startColumn": 2
                          }
                        },
                        "message": {
                          "text": "read-it-later.init"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/http/h2_bundle.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 3064,
                            "startColumn": 37
                          }
                        },
                        "message": {
                          "text": "net/http.init"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/os/env.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "startColumn": 24
                          }
                        },
                        "message": {
                          "text": "os.Getenv"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/http/header.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 240,
                            "startColumn": 6
                          }
                        },
                        "message": {
                          "text": "net/http.CanonicalHeaderKey"
                        }
                      }
                    }
                  ]
                }
              ],
              "message": {
                "text": "A summarized code flow for vulnerable function net/http.CanonicalHeaderKey"
              }
            },
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "module": "read-it-later@",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 33,
                            "startColumn": 21
                          }
                        },
                        "message": {
                          "text": "read-it-later.main"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/http/server.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 3436,
                            "startColumn": 6
                          }
                        },
                        "message": {
                          "text": "net/http.ListenAndServe"
                        }
                      }
                    }
                  ]
                }
              ],
              "message": {
                "text": "A summarized code flow for vulnerable function net/http.ListenAndServe"
              }
            },
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "module": "read-it-later@",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "startColumn": 13
                          }
                        },
                        "message": {
                          "text": "read-it-later.main"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/fmt/print.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 314,
                            "startColumn": 17
                          }
                        },
                        "message": {
                          "text": "fmt.Println"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/fmt/print.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 304,
                            "startColumn": 13
                          }
                        },
                        "message": {
                          "text": "fmt.Fprintln"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/http/h2_bundle.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 1227,
                            "startColumn": 31
                          }
                        },
                        "message": {
                          "text": "net/http.http2ConnectionError.Error"
                        }
                      }
                    }
                  ]
                }
              ],
              "message": {
                "text": "A summarized code flow for vulnerable function net/http.http2ConnectionError.Error"
              }
            },
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "module": "read-it-later@",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "startColumn": 13
                          }
                        },
                        "message": {
                          "text": "read-it-later.main"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/fmt/print.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 314,
                            "startColumn": 17
                          }
                        },
                        "message": {
                          "text": "fmt.Println"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/fmt/print.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 304,
                            "startColumn": 13
                          }
                        },
                        "message": {
                          "text": "fmt.Fprintln"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/http/h2_bundle.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 1209,
                            "startColumn": 23
                          }
                        },
                        "message": {
                          "text": "net/http.http2ErrCode.String"
                        }
                      }
                    }
                  ]
                }
              ],
              "message": {
                "text": "A summarized code flow for vulnerable function net/http.http2ErrCode.String"
              }
            },
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "module": "read-it-later@",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "startColumn": 13
                          }
                        },
                        "message": {
                          "text": "read-it-later.main"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/fmt/print.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 314,
                            "startColumn": 17
                          }
                        },
                        "message": {
                          "text": "fmt.Println"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/fmt/print.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 304,
                            "startColumn": 13
                          }
                        },
                        "message": {
                          "text": "fmt.Fprintln"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/http/h2_bundle.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 1577,
                            "startColumn": 27
                          }
                        },
                        "message": {
                          "text": "net/http.http2FrameHeader.String"
                        }
                      }
                    }
                  ]
                }
              ],
              "message": {
                "text": "A summarized code flow for vulnerable function net/http.http2FrameHeader.String"
              }
            },
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "module": "read-it-later@",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "startColumn": 13
                          }
                        },
                        "message": {
                          "text": "read-it-later.main"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/fmt/print.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 314,
                            "startColumn": 17
                          }
                        },
                        "message": {
                          "text": "fmt.Println"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/fmt/print.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 304,
                            "startColumn": 13
                          }
                        },
                        "message": {
                          "text": "fmt.Fprintln"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/http/h2_bundle.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 1456,
                            "startColumn": 25
                          }
                        },
                        "message": {
                          "text": "net/http.http2FrameType.String"
                        }
                      }
                    }
                  ]
                }
              ],
              "message": {
                "text": "A summarized code flow for vulnerable function net/http.http2FrameType.String"
              }
            },
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "module": "read-it-later@",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "startColumn": 13
                          }
                        },
                        "message": {
                          "text": "read-it-later.main"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/fmt/print.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 314,
                            "startColumn": 17
                          }
                        },
                        "message": {
                          "text": "fmt.Println"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/fmt/print.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 304,
                            "startColumn": 13
                          }
                        },
                        "message": {
                          "text": "fmt.Fprintln"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/http/h2_bundle.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 10775,
                            "startColumn": 34
                          }
                        },
                        "message": {
                          "text": "net/http.http2FrameWriteRequest.String"
                        }
                      }
                    }
                  ]
                }
              ],
              "message": {
                "text": "A summarized code flow for vulnerable function net/http.http2FrameWriteRequest.String"
              }
            },
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "module": "read-it-later@",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "startColumn": 13
                          }
                        },
                        "message": {
                          "text": "read-it-later.main"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/fmt/print.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 314,
                            "startColumn": 17
                          }
                        },
                        "message": {
                          "text": "fmt.Println"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/fmt/print.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 304,
                            "startColumn": 13
                          }
                        },
                        "message": {
                          "text": "fmt.Fprintln"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/http/h2_bundle.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 3399,
                            "startColumn": 23
                          }
                        },
                        "message": {
                          "text": "net/http.http2Setting.String"
                        }
                      }
                    }
                  ]
                }
              ],
              "message": {
                "text": "A summarized code flow for vulnerable function net/http.http2Setting.String"
              }
            },
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "module": "read-it-later@",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "startColumn": 13
                          }
                        },
                        "message": {
                          "text": "read-it-later.main"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/fmt/print.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 314,
                            "startColumn": 17
                          }
                        },
                        "message": {
                          "text": "fmt.Println"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/fmt/print.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 304,
                            "startColumn": 13
                          }
                        },
                        "message": {
                          "text": "fmt.Fprintln"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/http/h2_bundle.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 3445,
                            "startColumn": 25
                          }
                        },
                        "message": {
                          "text": "net/http.http2SettingID.String"
                        }
                      }
                    }
                  ]
                }
              ],
              "message": {
                "text": "A summarized code flow for vulnerable function net/http.http2SettingID.String"
              }
            },
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "module": "read-it-later@",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "startColumn": 13
                          }
                        },
                        "message": {
                          "text": "read-it-later.main"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/fmt/print.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 314,
                            "startColumn": 17
                          }
                        },
                        "message": {
                          "text": "fmt.Println"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/fmt/print.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 304,
                            "startColumn": 13
                          }
                        },
                        "message": {
                          "text": "fmt.Fprintln"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/http/h2_bundle.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 1248,
                            "startColumn": 27
                          }
                        },
                        "message": {
                          "text": "net/http.http2StreamError.Error"
                        }
                      }
                    }
                  ]
                }
              ],
              "message": {
                "text": "A summarized code flow for vulnerable function net/http.http2StreamError.Error"
              }
            },
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "module": "read-it-later@",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "startColumn": 13
                          }
                        },
                        "message": {
                          "text": "read-it-later.main"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/fmt/print.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 314,
                            "startColumn": 17
                          }
                        },
                        "message": {
                          "text": "fmt.Println"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/fmt/print.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 304,
                            "startColumn": 13
                          }
                        },
                        "message": {
                          "text": "fmt.Fprintln"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/http/h2_bundle.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 1276,
                            "startColumn": 25
                          }
                        },
                        "message": {
                          "text": "net/http.http2connError.Error"
                        }
                      }
                    }
                  ]
                }
              ],
              "message": {
                "text": "A summarized code flow for vulnerable function net/http.http2connError.Error"
              }
            },
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "module": "read-it-later@",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "startColumn": 13
                          }
                        },
                        "message": {
                          "text": "read-it-later.main"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/fmt/print.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 314,
                            "startColumn": 17
                          }
                        },
                        "message": {
                          "text": "fmt.Println"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/fmt/print.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 304,
                            "startColumn": 13
                          }
                        },
                        "message": {
                          "text": "fmt.Fprintln"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/http/h2_bundle.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 1288,
                            "startColumn": 42
                          }
                        },
                        "message": {
                          "text": "net/http.http2duplicatePseudoHeaderError.Error"
                        }
                      }
                    }
                  ]
                }
              ],
              "message": {
                "text": "A summarized code flow for vulnerable function net/http.http2duplicatePseudoHeaderError.Error"
              }
            },
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "module": "read-it-later@",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "startColumn": 13
                          }
                        },
                        "message": {
                          "text": "read-it-later.main"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/fmt/print.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 314,
                            "startColumn": 17
                          }
                        },
                        "message": {
                          "text": "fmt.Println"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/fmt/print.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 304,
                            "startColumn": 13
                          }
                        },
                        "message": {
                          "text": "fmt.Fprintln"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/http/h2_bundle.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 1294,
                            "startColumn": 36
                          }
                        },
                        "message": {
                          "text": "net/http.http2headerFieldNameError.Error"
                        }
                      }
                    }
                  ]
                }
              ],
              "message": {
                "text": "A summarized code flow for vulnerable function net/http.http2headerFieldNameError.Error"
              }
            },
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "module": "read-it-later@",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "startColumn": 13
                          }
                        },
                        "message": {
                          "text": "read-it-later.main"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/fmt/print.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 314,
                            "startColumn": 17
                          }
                        },
                        "message": {
                          "text": "fmt.Println"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/fmt/print.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 304,
                            "startColumn": 13
                          }
                        },
                        "message": {
                          "text": "fmt.Fprintln"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/http/h2_bundle.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 1300,
                            "startColumn": 37
                          }
                        },
                        "message": {
                          "text": "net/http.http2headerFieldValueError.Error"
                        }
                      }
                    }
                  ]
                }
              ],
              "message": {
                "text": "A summarized code flow for vulnerable function net/http.http2headerFieldValueError.Error"
              }
            },
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "module": "read-it-later@",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "startColumn": 13
                          }
                        },
                        "message": {
                          "text": "read-it-later.main"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/fmt/print.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 314,
                            "startColumn": 17
                          }
                        },
                        "message": {
                          "text": "fmt.Println"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/fmt/print.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 304,
                            "startColumn": 13
                          }
                        },
                        "message": {
                          "text": "fmt.Fprintln"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/http/h2_bundle.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 1282,
                            "startColumn": 33
                          }
                        },
                        "message": {
                          "text": "net/http.http2pseudoHeaderError.Error"
                        }
                      }
                    }
                  ]
                }
              ],
              "message": {
                "text": "A summarized code flow for vulnerable function net/http.http2pseudoHeaderError.Error"
              }
            }
          ],
          "stacks": [
            {
              "message": {
                "text": "A call stack for vulnerable function net/http.*bodyEOFSignal.Read"
              },
              "frames": [
                {
                  "module": "read-it-later@",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "main.go",
                        "uriBaseId": "%SRCROOT%"
                      },
                      "region": {
                        "startLine": 7,
                        "startColumn": 2
                      }
                    },
                    "message": {
                      "text": "read-it-later.init"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/h2_bundle.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 3064,
                        "startColumn": 37
                      }
                    },
                    "message": {
                      "text": "net/http.init"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/os/env.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 103,
                        "startColumn": 24
                      }
                    },
                    "message": {
                      "text": "os.Getenv"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/syscall/env_unix.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 70,
                        "startColumn": 12
                      }
                    },
                    "message": {
                      "text": "syscall.Getenv"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/sync/once.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 65,
                        "startColumn": 11
                      }
                    },
                    "message": {
                      "text": "sync.*Once.Do"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/sync/once.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 74,
                        "startColumn": 4
                      }
                    },
                    "message": {
                      "text": "sync.*Once.doSlow"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/port_unix.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 25,
                        "startColumn": 31
                      }
                    },
                    "message": {
                      "text": "net.readServices"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/parse.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 55,
                        "startColumn": 24
                      }
                    },
                    "message": {
                      "text": "net.*file.readLine"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/io/io.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 354,
                        "startColumn": 20
                      }
                    },
                    "message": {
                      "text": "io.ReadFull"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/io/io.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 335,
                        "startColumn": 19
                      }
                    },
                    "message": {
                      "text": "io.ReadAtLeast"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/transport.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 2821,
                        "startColumn": 26
                      }
                    },
                    "message": {
                      "text": "net/http.*bodyEOFSignal.Read"
                    }
                  }
                }
              ]
            },
            {
              "message": {
                "text": "A call stack for vulnerable function net/http.*connReader.Read"
              },
              "frames": [
                {
                  "module": "read-it-later@",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "main.go",
                        "uriBaseId": "%SRCROOT%"
                      },
                      "region": {
                        "startLine": 7,
                        "startColumn": 2
                      }
                    },
                    "message": {
                      "text": "read-it-later.init"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/h2_bundle.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 3064,
                        "startColumn": 37
                      }
                    },
                    "message": {
                      "text": "net/http.init"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/os/env.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 103,
                        "startColumn": 24
                      }
                    },
                    "message": {
                      "text": "os.Getenv"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/syscall/env_unix.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 70,
                        "startColumn": 12
                      }
                    },
                    "message": {
                      "text": "syscall.Getenv"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/sync/once.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 65,
                        "startColumn": 11
                      }
                    },
                    "message": {
                      "text": "sync.*Once.Do"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/sync/once.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 74,
                        "startColumn": 4
                      }
                    },
                    "message": {
                      "text": "sync.*Once.doSlow"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/port_unix.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 25,
                        "startColumn": 31
                      }
                    },
                    "message": {
                      "text": "net.readServices"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/parse.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 55,
                        "startColumn": 24
                      }
                    },
                    "message": {
                      "text": "net.*file.readLine"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/io/io.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 354,
                        "startColumn": 20
                      }
                    },
                    "message": {
                      "text": "io.ReadFull"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/io/io.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 335,
                        "startColumn": 19
                      }
                    },
                    "message": {
                      "text": "io.ReadAtLeast"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/bufio/bufio.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 227,
                        "startColumn": 24
                      }
                    },
                    "message": {
                      "text": "bufio.*Reader.Read"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/server.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 761,
                        "startColumn": 23
                      }
                    },
                    "message": {
                      "text": "net/http.*connReader.Read"
                    }
                  }
                }
              ]
            },
            {
              "message": {
                "text": "A call stack for vulnerable function net/http.*http2responseWriter.Write"
              },
              "frames": [
                {
                  "module": "read-it-later@",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "main.go",
                        "uriBaseId": "%SRCROOT%"
                      },
                      "region": {
                        "startLine": 32,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "read-it-later.main"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 314,
                        "startColumn": 17
                      }
                    },
                    "message": {
                      "text": "fmt.Println"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 305,
                        "startColumn": 18
                      }
                    },
                    "message": {
                      "text": "fmt.Fprintln"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/h2_bundle.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 6737,
                        "startColumn": 31
                      }
                    },
                    "message": {
                      "text": "net/http.*http2responseWriter.Write"
                    }
                  }
                }
              ]
            },
            {
              "message": {
                "text": "A call stack for vulnerable function net/http.*http2responseWriter.WriteString"
              },
              "frames": [
                {
                  "module": "read-it-later@",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "main.go",
                        "uriBaseId": "%SRCROOT%"
                      },
                      "region": {
                        "startLine": 7,
                        "startColumn": 2
                      }
                    },
                    "message": {
                      "text": "read-it-later.init"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/h2_bundle.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 3064,
                        "startColumn": 37
                      }
                    },
                    "message": {
                      "text": "net/http.init"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/os/env.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 103,
                        "startColumn": 24
                      }
                    },
                    "message": {
                      "text": "os.Getenv"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/syscall/env_unix.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 70,
                        "startColumn": 12
                      }
                    },
                    "message": {
                      "text": "syscall.Getenv"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/sync/once.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 65,
                        "startColumn": 11
                      }
                    },
                    "message": {
                      "text": "sync.*Once.Do"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/sync/once.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 74,
                        "startColumn": 4
                      }
                    },
                    "message": {
                      "text": "sync.*Once.doSlow"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/port_unix.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 25,
                        "startColumn": 31
                      }
                    },
                    "message": {
                      "text": "net.readServices"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/parse.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 55,
                        "startColumn": 24
                      }
                    },
                    "message": {
                      "text": "net.*file.readLine"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/io/io.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 354,
                        "startColumn": 20
                      }
                    },
                    "message": {
                      "text": "io.ReadFull"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/io/io.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 335,
                        "startColumn": 19
                      }
                    },
                    "message": {
                      "text": "io.ReadAtLeast"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/crypto/tls/conn.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 1374,
                        "startColumn": 42
                      }
                    },
                    "message": {
                      "text": "crypto/tls.*Conn.Read"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/crypto/tls/conn.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 1286,
                        "startColumn": 31
                      }
                    },
                    "message": {
                      "text": "crypto/tls.*Conn.handlePostHandshakeMessage"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/crypto/tls/conn.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 1276,
                        "startColumn": 39
                      }
                    },
                    "message": {
                      "text": "crypto/tls.*Conn.handleRenegotiation"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/crypto/tls/handshake_client.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 263,
                        "startColumn": 22
                      }
                    },
                    "message": {
                      "text": "crypto/tls.*Conn.clientHandshake"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/crypto/tls/handshake_client_tls13.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 96,
                        "startColumn": 36
                      }
                    },
                    "message": {
                      "text": "crypto/tls.*clientHandshakeStateTLS13.handshake"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/crypto/tls/handshake_client_tls13.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 562,
                        "startColumn": 25
                      }
                    },
                    "message": {
                      "text": "crypto/tls.*clientHandshakeStateTLS13.readServerCertificate"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/crypto/tls/auth.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 85,
                        "startColumn": 17
                      }
                    },
                    "message": {
                      "text": "crypto/tls.signedMessage"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/io/io.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 316,
                        "startColumn": 24
                      }
                    },
                    "message": {
                      "text": "io.WriteString"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/h2_bundle.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 6741,
                        "startColumn": 31
                      }
                    },
                    "message": {
                      "text": "net/http.*http2responseWriter.WriteString"
                    }
                  }
                }
              ]
            },
            {
              "message": {
                "text": "A call stack for vulnerable function net/http.*http2writeData.String"
              },
              "frames": [
                {
                  "module": "read-it-later@",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "main.go",
                        "uriBaseId": "%SRCROOT%"
                      },
                      "region": {
                        "startLine": 32,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "read-it-later.main"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 314,
                        "startColumn": 17
                      }
                    },
                    "message": {
                      "text": "fmt.Println"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 304,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "fmt.Fprintln"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 1221,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.doPrintln"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 749,
                        "startColumn": 22
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.printArg"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 673,
                        "startColumn": 25
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.handleMethods"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/h2_bundle.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 10353,
                        "startColumn": 26
                      }
                    },
                    "message": {
                      "text": "net/http.*http2writeData.String"
                    }
                  }
                }
              ]
            },
            {
              "message": {
                "text": "A call stack for vulnerable function net/http.*onceCloseListener.Close"
              },
              "frames": [
                {
                  "module": "read-it-later@",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "main.go",
                        "uriBaseId": "%SRCROOT%"
                      },
                      "region": {
                        "startLine": 7,
                        "startColumn": 2
                      }
                    },
                    "message": {
                      "text": "read-it-later.init"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/h2_bundle.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 3064,
                        "startColumn": 37
                      }
                    },
                    "message": {
                      "text": "net/http.init"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/os/env.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 103,
                        "startColumn": 24
                      }
                    },
                    "message": {
                      "text": "os.Getenv"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/syscall/env_unix.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 70,
                        "startColumn": 12
                      }
                    },
                    "message": {
                      "text": "syscall.Getenv"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/sync/once.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 65,
                        "startColumn": 11
                      }
                    },
                    "message": {
                      "text": "sync.*Once.Do"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/sync/once.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 74,
                        "startColumn": 4
                      }
                    },
                    "message": {
                      "text": "sync.*Once.doSlow"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/server.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 3701,
                        "startColumn": 71
                      }
                    },
                    "message": {
                      "text": "net/http.*onceCloseListener.close"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/server.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 3696,
                        "startColumn": 30
                      }
                    },
                    "message": {
                      "text": "net/http.*onceCloseListener.Close"
                    }
                  }
                }
              ]
            },
            {
              "message": {
                "text": "A call stack for vulnerable function net/http.*response.Write"
              },
              "frames": [
                {
                  "module": "read-it-later@",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "main.go",
                        "uriBaseId": "%SRCROOT%"
                      },
                      "region": {
                        "startLine": 32,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "read-it-later.main"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 314,
                        "startColumn": 17
                      }
                    },
                    "message": {
                      "text": "fmt.Println"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 305,
                        "startColumn": 18
                      }
                    },
                    "message": {
                      "text": "fmt.Fprintln"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/server.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 1610,
                        "startColumn": 20
                      }
                    },
                    "message": {
                      "text": "net/http.*response.Write"
                    }
                  }
                }
              ]
            },
            {
              "message": {
                "text": "A call stack for vulnerable function net/http.CanonicalHeaderKey"
              },
              "frames": [
                {
                  "module": "read-it-later@",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "main.go",
                        "uriBaseId": "%SRCROOT%"
                      },
                      "region": {
                        "startLine": 7,
                        "startColumn": 2
                      }
                    },
                    "message": {
                      "text": "read-it-later.init"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/h2_bundle.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 3064,
                        "startColumn": 37
                      }
                    },
                    "message": {
                      "text": "net/http.init"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/os/env.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 103,
                        "startColumn": 24
                      }
                    },
                    "message": {
                      "text": "os.Getenv"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/syscall/env_unix.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 70,
                        "startColumn": 12
                      }
                    },
                    "message": {
                      "text": "syscall.Getenv"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/sync/once.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 65,
                        "startColumn": 11
                      }
                    },
                    "message": {
                      "text": "sync.*Once.Do"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/sync/once.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 74,
                        "startColumn": 4
                      }
                    },
                    "message": {
                      "text": "sync.*Once.doSlow"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/h2_bundle.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 3289,
                        "startColumn": 28
                      }
                    },
                    "message": {
                      "text": "net/http.http2buildCommonHeaderMaps"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/header.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 240,
                        "startColumn": 6
                      }
                    },
                    "message": {
                      "text": "net/http.CanonicalHeaderKey"
                    }
                  }
                }
              ]
            },
            {
              "message": {
                "text": "A call stack for vulnerable function net/http.ListenAndServe"
              },
              "frames": [
                {
                  "module": "read-it-later@",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "main.go",
                        "uriBaseId": "%SRCROOT%"
                      },
                      "region": {
                        "startLine": 33,
                        "startColumn": 21
                      }
                    },
                    "message": {
                      "text": "read-it-later.main"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/server.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 3436,
                        "startColumn": 6
                      }
                    },
                    "message": {
                      "text": "net/http.ListenAndServe"
                    }
                  }
                }
              ]
            },
            {
              "message": {
                "text": "A call stack for vulnerable function net/http.http2ConnectionError.Error"
              },
              "frames": [
                {
                  "module": "read-it-later@",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "main.go",
                        "uriBaseId": "%SRCROOT%"
                      },
                      "region": {
                        "startLine": 32,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "read-it-later.main"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 314,
                        "startColumn": 17
                      }
                    },
                    "message": {
                      "text": "fmt.Println"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 304,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "fmt.Fprintln"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 1221,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.doPrintln"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 749,
                        "startColumn": 22
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.printArg"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 667,
                        "startColumn": 24
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.handleMethods"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/h2_bundle.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 1227,
                        "startColumn": 31
                      }
                    },
                    "message": {
                      "text": "net/http.http2ConnectionError.Error"
                    }
                  }
                }
              ]
            },
            {
              "message": {
                "text": "A call stack for vulnerable function net/http.http2ErrCode.String"
              },
              "frames": [
                {
                  "module": "read-it-later@",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "main.go",
                        "uriBaseId": "%SRCROOT%"
                      },
                      "region": {
                        "startLine": 32,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "read-it-later.main"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 314,
                        "startColumn": 17
                      }
                    },
                    "message": {
                      "text": "fmt.Println"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 304,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "fmt.Fprintln"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 1221,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.doPrintln"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 749,
                        "startColumn": 22
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.printArg"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 673,
                        "startColumn": 25
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.handleMethods"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/h2_bundle.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 1209,
                        "startColumn": 23
                      }
                    },
                    "message": {
                      "text": "net/http.http2ErrCode.String"
                    }
                  }
                }
              ]
            },
            {
              "message": {
                "text": "A call stack for vulnerable function net/http.http2FrameHeader.String"
              },
              "frames": [
                {
                  "module": "read-it-later@",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "main.go",
                        "uriBaseId": "%SRCROOT%"
                      },
                      "region": {
                        "startLine": 32,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "read-it-later.main"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 314,
                        "startColumn": 17
                      }
                    },
                    "message": {
                      "text": "fmt.Println"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 304,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "fmt.Fprintln"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 1221,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.doPrintln"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 749,
                        "startColumn": 22
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.printArg"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 673,
                        "startColumn": 25
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.handleMethods"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/h2_bundle.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 1577,
                        "startColumn": 27
                      }
                    },
                    "message": {
                      "text": "net/http.http2FrameHeader.String"
                    }
                  }
                }
              ]
            },
            {
              "message": {
                "text": "A call stack for vulnerable function net/http.http2FrameType.String"
              },
              "frames": [
                {
                  "module": "read-it-later@",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "main.go",
                        "uriBaseId": "%SRCROOT%"
                      },
                      "region": {
                        "startLine": 32,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "read-it-later.main"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 314,
                        "startColumn": 17
                      }
                    },
                    "message": {
                      "text": "fmt.Println"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 304,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "fmt.Fprintln"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 1221,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.doPrintln"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 749,
                        "startColumn": 22
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.printArg"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 673,
                        "startColumn": 25
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.handleMethods"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/h2_bundle.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 1456,
                        "startColumn": 25
                      }
                    },
                    "message": {
                      "text": "net/http.http2FrameType.String"
                    }
                  }
                }
              ]
            },
            {
              "message": {
                "text": "A call stack for vulnerable function net/http.http2FrameWriteRequest.String"
              },
              "frames": [
                {
                  "module": "read-it-later@",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "main.go",
                        "uriBaseId": "%SRCROOT%"
                      },
                      "region": {
                        "startLine": 32,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "read-it-later.main"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 314,
                        "startColumn": 17
                      }
                    },
                    "message": {
                      "text": "fmt.Println"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 304,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "fmt.Fprintln"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 1221,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.doPrintln"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 749,
                        "startColumn": 22
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.printArg"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 673,
                        "startColumn": 25
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.handleMethods"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/h2_bundle.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 10775,
                        "startColumn": 34
                      }
                    },
                    "message": {
                      "text": "net/http.http2FrameWriteRequest.String"
                    }
                  }
                }
              ]
            },
            {
              "message": {
                "text": "A call stack for vulnerable function net/http.http2Setting.String"
              },
              "frames": [
                {
                  "module": "read-it-later@",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "main.go",
                        "uriBaseId": "%SRCROOT%"
                      },
                      "region": {
                        "startLine": 32,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "read-it-later.main"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 314,
                        "startColumn": 17
                      }
                    },
                    "message": {
                      "text": "fmt.Println"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 304,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "fmt.Fprintln"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 1221,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.doPrintln"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 749,
                        "startColumn": 22
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.printArg"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 673,
                        "startColumn": 25
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.handleMethods"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/h2_bundle.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 3399,
                        "startColumn": 23
                      }
                    },
                    "message": {
                      "text": "net/http.http2Setting.String"
                    }
                  }
                }
              ]
            },
            {
              "message": {
                "text": "A call stack for vulnerable function net/http.http2SettingID.String"
              },
              "frames": [
                {
                  "module": "read-it-later@",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "main.go",
                        "uriBaseId": "%SRCROOT%"
                      },
                      "region": {
                        "startLine": 32,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "read-it-later.main"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 314,
                        "startColumn": 17
                      }
                    },
                    "message": {
                      "text": "fmt.Println"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 304,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "fmt.Fprintln"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 1221,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.doPrintln"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 749,
                        "startColumn": 22
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.printArg"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 673,
                        "startColumn": 25
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.handleMethods"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/h2_bundle.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 3445,
                        "startColumn": 25
                      }
                    },
                    "message": {
                      "text": "net/http.http2SettingID.String"
                    }
                  }
                }
              ]
            },
            {
              "message": {
                "text": "A call stack for vulnerable function net/http.http2StreamError.Error"
              },
              "frames": [
                {
                  "module": "read-it-later@",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "main.go",
                        "uriBaseId": "%SRCROOT%"
                      },
                      "region": {
                        "startLine": 32,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "read-it-later.main"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 314,
                        "startColumn": 17
                      }
                    },
                    "message": {
                      "text": "fmt.Println"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 304,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "fmt.Fprintln"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 1221,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.doPrintln"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 749,
                        "startColumn": 22
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.printArg"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 667,
                        "startColumn": 24
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.handleMethods"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/h2_bundle.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 1248,
                        "startColumn": 27
                      }
                    },
                    "message": {
                      "text": "net/http.http2StreamError.Error"
                    }
                  }
                }
              ]
            },
            {
              "message": {
                "text": "A call stack for vulnerable function net/http.http2connError.Error"
              },
              "frames": [
                {
                  "module": "read-it-later@",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "main.go",
                        "uriBaseId": "%SRCROOT%"
                      },
                      "region": {
                        "startLine": 32,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "read-it-later.main"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 314,
                        "startColumn": 17
                      }
                    },
                    "message": {
                      "text": "fmt.Println"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 304,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "fmt.Fprintln"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 1221,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.doPrintln"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 749,
                        "startColumn": 22
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.printArg"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 667,
                        "startColumn": 24
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.handleMethods"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/h2_bundle.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 1276,
                        "startColumn": 25
                      }
                    },
                    "message": {
                      "text": "net/http.http2connError.Error"
                    }
                  }
                }
              ]
            },
            {
              "message": {
                "text": "A call stack for vulnerable function net/http.http2duplicatePseudoHeaderError.Error"
              },
              "frames": [
                {
                  "module": "read-it-later@",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "main.go",
                        "uriBaseId": "%SRCROOT%"
                      },
                      "region": {
                        "startLine": 32,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "read-it-later.main"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 314,
                        "startColumn": 17
                      }
                    },
                    "message": {
                      "text": "fmt.Println"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 304,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "fmt.Fprintln"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 1221,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.doPrintln"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 749,
                        "startColumn": 22
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.printArg"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 667,
                        "startColumn": 24
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.handleMethods"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/h2_bundle.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 1288,
                        "startColumn": 42
                      }
                    },
                    "message": {
                      "text": "net/http.http2duplicatePseudoHeaderError.Error"
                    }
                  }
                }
              ]
            },
            {
              "message": {
                "text": "A call stack for vulnerable function net/http.http2headerFieldNameError.Error"
              },
              "frames": [
                {
                  "module": "read-it-later@",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "main.go",
                        "uriBaseId": "%SRCROOT%"
                      },
                      "region": {
                        "startLine": 32,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "read-it-later.main"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 314,
                        "startColumn": 17
                      }
                    },
                    "message": {
                      "text": "fmt.Println"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 304,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "fmt.Fprintln"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 1221,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.doPrintln"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 749,
                        "startColumn": 22
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.printArg"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 667,
                        "startColumn": 24
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.handleMethods"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/h2_bundle.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 1294,
                        "startColumn": 36
                      }
                    },
                    "message": {
                      "text": "net/http.http2headerFieldNameError.Error"
                    }
                  }
                }
              ]
            },
            {
              "message": {
                "text": "A call stack for vulnerable function net/http.http2headerFieldValueError.Error"
              },
              "frames": [
                {
                  "module": "read-it-later@",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "main.go",
                        "uriBaseId": "%SRCROOT%"
                      },
                      "region": {
                        "startLine": 32,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "read-it-later.main"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 314,
                        "startColumn": 17
                      }
                    },
                    "message": {
                      "text": "fmt.Println"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 304,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "fmt.Fprintln"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 1221,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.doPrintln"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 749,
                        "startColumn": 22
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.printArg"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 667,
                        "startColumn": 24
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.handleMethods"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/h2_bundle.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 1300,
                        "startColumn": 37
                      }
                    },
                    "message": {
                      "text": "net/http.http2headerFieldValueError.Error"
                    }
                  }
                }
              ]
            },
            {
              "message": {
                "text": "A call stack for vulnerable function net/http.http2pseudoHeaderError.Error"
              },
              "frames": [
                {
                  "module": "read-it-later@",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "main.go",
                        "uriBaseId": "%SRCROOT%"
                      },
                      "region": {
                        "startLine": 32,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "read-it-later.main"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 314,
                        "startColumn": 17
                      }
                    },
                    "message": {
                      "text": "fmt.Println"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 304,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "fmt.Fprintln"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 1221,
                        "startColumn": 13
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.doPrintln"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 749,
                        "startColumn": 22
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.printArg"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/fmt/print.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 667,
                        "startColumn": 24
                      }
                    },
                    "message": {
                      "text": "fmt.*pp.handleMethods"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/h2_bundle.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 1282,
                        "startColumn": 33
                      }
                    },
                    "message": {
                      "text": "net/http.http2pseudoHeaderError.Error"
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "ruleId": "GO-2024-2824",
          "level": "error",
          "message": {
            "text": "Your code calls vulnerable functions in 1 package (net)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "go.mod",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1
                }
              },
              "message": {
                "text": "Findings for vulnerability GO-2024-2824"
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "module": "read-it-later@",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 33,
                            "startColumn": 21
                          }
                        },
                        "message": {
                          "text": "read-it-later.main"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/http/server.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 3438,
                            "startColumn": 30
                          }
                        },
                        "message": {
                          "text": "net/http.ListenAndServe"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/http/server.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 3180,
                            "startColumn": 23
                          }
                        },
                        "message": {
                          "text": "net/http.*Server.ListenAndServe"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/dial.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 806,
                            "startColumn": 6
                          }
                        },
                        "message": {
                          "text": "net.Listen"
                        }
                      }
                    }
                  ]
                }
              ],
              "message": {
                "text": "A summarized code flow for vulnerable function net.Listen"
              }
            }
          ],
          "stacks": [
            {
              "message": {
                "text": "A call stack for vulnerable function net.Listen"
              },
              "frames": [
                {
                  "module": "read-it-later@",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "main.go",
                        "uriBaseId": "%SRCROOT%"
                      },
                      "region": {
                        "startLine": 33,
                        "startColumn": 21
                      }
                    },
                    "message": {
                      "text": "read-it-later.main"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/server.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 3438,
                        "startColumn": 30
                      }
                    },
                    "message": {
                      "text": "net/http.ListenAndServe"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/server.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 3180,
                        "startColumn": 23
                      }
                    },
                    "message": {
                      "text": "net/http.*Server.ListenAndServe"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/dial.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 806,
                        "startColumn": 6
                      }
                    },
                    "message": {
                      "text": "net.Listen"
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "ruleId": "GO-2024-2887",
          "level": "error",
          "message": {
            "text": "Your code calls vulnerable functions in 1 package (net/netip)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "go.mod",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1
                }
              },
              "message": {
                "text": "Findings for vulnerability GO-2024-2887"
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "module": "read-it-later@",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 33,
                            "startColumn": 21
                          }
                        },
                        "message": {
                          "text": "read-it-later.main"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/http/server.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 3438,
                            "startColumn": 30
                          }
                        },
                        "message": {
                          "text": "net/http.ListenAndServe"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/http/server.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 3180,
                            "startColumn": 23
                          }
                        },
                        "message": {
                          "text": "net/http.*Server.ListenAndServe"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/netip/netip.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 525,
                            "startColumn": 16
                          }
                        },
                        "message": {
                          "text": "net/netip.Addr.IsLoopback"
                        }
                      }
                    }
                  ]
                }
              ],
              "message": {
                "text": "A summarized code flow for vulnerable function net/netip.Addr.IsLoopback"
              }
            },
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "module": "read-it-later@",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "main.go",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 33,
                            "startColumn": 21
                          }
                        },
                        "message": {
                          "text": "read-it-later.main"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/http/server.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 3438,
                            "startColumn": 30
                          }
                        },
                        "message": {
                          "text": "net/http.ListenAndServe"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/http/server.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 3180,
                            "startColumn": 23
                          }
                        },
                        "message": {
                          "text": "net/http.*Server.ListenAndServe"
                        }
                      }
                    },
                    {
                      "module": "stdlib@v1.22.0",
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/net/netip/netip.go",
                            "uriBaseId": "%GOROOT%"
                          },
                          "region": {
                            "startLine": 540,
                            "startColumn": 16
                          }
                        },
                        "message": {
                          "text": "net/netip.Addr.IsMulticast"
                        }
                      }
                    }
                  ]
                }
              ],
              "message": {
                "text": "A summarized code flow for vulnerable function net/netip.Addr.IsMulticast"
              }
            }
          ],
          "stacks": [
            {
              "message": {
                "text": "A call stack for vulnerable function net/netip.Addr.IsLoopback"
              },
              "frames": [
                {
                  "module": "read-it-later@",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "main.go",
                        "uriBaseId": "%SRCROOT%"
                      },
                      "region": {
                        "startLine": 33,
                        "startColumn": 21
                      }
                    },
                    "message": {
                      "text": "read-it-later.main"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/server.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 3438,
                        "startColumn": 30
                      }
                    },
                    "message": {
                      "text": "net/http.ListenAndServe"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/server.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 3180,
                        "startColumn": 23
                      }
                    },
                    "message": {
                      "text": "net/http.*Server.ListenAndServe"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/dial.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 808,
                        "startColumn": 18
                      }
                    },
                    "message": {
                      "text": "net.Listen"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/dial.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 718,
                        "startColumn": 47
                      }
                    },
                    "message": {
                      "text": "net.*ListenConfig.Listen"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/dial.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 283,
                        "startColumn": 34
                      }
                    },
                    "message": {
                      "text": "net.*Resolver.resolveAddrList"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/ipsock.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 288,
                        "startColumn": 28
                      }
                    },
                    "message": {
                      "text": "net.*Resolver.internetAddrList"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/lookup.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 333,
                        "startColumn": 33
                      }
                    },
                    "message": {
                      "text": "net.*Resolver.lookupIPAddr"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/internal/singleflight/singleflight.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 86,
                        "startColumn": 2
                      }
                    },
                    "message": {
                      "text": "internal/singleflight.*Group.DoChan"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/internal/singleflight/singleflight.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 93,
                        "startColumn": 19
                      }
                    },
                    "message": {
                      "text": "internal/singleflight.*Group.doCall"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/lookup.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 334,
                        "startColumn": 26
                      }
                    },
                    "message": {
                      "text": "net.lookupIPAddr"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/hook.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 22,
                        "startColumn": 12
                      }
                    },
                    "message": {
                      "text": "net.init"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/lookup_unix.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 68,
                        "startColumn": 39
                      }
                    },
                    "message": {
                      "text": "net.*Resolver.lookupIP"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/dnsclient_unix.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 802,
                        "startColumn": 15
                      }
                    },
                    "message": {
                      "text": "net.*Resolver.goLookupIPCNAMEOrder"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/addrselect.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 18,
                        "startColumn": 23
                      }
                    },
                    "message": {
                      "text": "net.sortByRFC6724"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/addrselect.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 29,
                        "startColumn": 25
                      }
                    },
                    "message": {
                      "text": "net.sortByRFC6724withSrcs"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/addrselect.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 72,
                        "startColumn": 28
                      }
                    },
                    "message": {
                      "text": "net.ipAttrOf"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/addrselect.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 317,
                        "startColumn": 18
                      }
                    },
                    "message": {
                      "text": "net.classifyScope"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/netip/netip.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 525,
                        "startColumn": 16
                      }
                    },
                    "message": {
                      "text": "net/netip.Addr.IsLoopback"
                    }
                  }
                }
              ]
            },
            {
              "message": {
                "text": "A call stack for vulnerable function net/netip.Addr.IsMulticast"
              },
              "frames": [
                {
                  "module": "read-it-later@",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "main.go",
                        "uriBaseId": "%SRCROOT%"
                      },
                      "region": {
                        "startLine": 33,
                        "startColumn": 21
                      }
                    },
                    "message": {
                      "text": "read-it-later.main"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/server.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 3438,
                        "startColumn": 30
                      }
                    },
                    "message": {
                      "text": "net/http.ListenAndServe"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/http/server.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 3180,
                        "startColumn": 23
                      }
                    },
                    "message": {
                      "text": "net/http.*Server.ListenAndServe"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/dial.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 808,
                        "startColumn": 18
                      }
                    },
                    "message": {
                      "text": "net.Listen"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/dial.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 718,
                        "startColumn": 47
                      }
                    },
                    "message": {
                      "text": "net.*ListenConfig.Listen"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/dial.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 283,
                        "startColumn": 34
                      }
                    },
                    "message": {
                      "text": "net.*Resolver.resolveAddrList"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/ipsock.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 288,
                        "startColumn": 28
                      }
                    },
                    "message": {
                      "text": "net.*Resolver.internetAddrList"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/lookup.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 333,
                        "startColumn": 33
                      }
                    },
                    "message": {
                      "text": "net.*Resolver.lookupIPAddr"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/internal/singleflight/singleflight.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 86,
                        "startColumn": 2
                      }
                    },
                    "message": {
                      "text": "internal/singleflight.*Group.DoChan"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/internal/singleflight/singleflight.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 93,
                        "startColumn": 19
                      }
                    },
                    "message": {
                      "text": "internal/singleflight.*Group.doCall"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/lookup.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 334,
                        "startColumn": 26
                      }
                    },
                    "message": {
                      "text": "net.lookupIPAddr"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/hook.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 22,
                        "startColumn": 12
                      }
                    },
                    "message": {
                      "text": "net.init"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/lookup_unix.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 68,
                        "startColumn": 39
                      }
                    },
                    "message": {
                      "text": "net.*Resolver.lookupIP"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/dnsclient_unix.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 802,
                        "startColumn": 15
                      }
                    },
                    "message": {
                      "text": "net.*Resolver.goLookupIPCNAMEOrder"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/addrselect.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 18,
                        "startColumn": 23
                      }
                    },
                    "message": {
                      "text": "net.sortByRFC6724"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/addrselect.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 29,
                        "startColumn": 25
                      }
                    },
                    "message": {
                      "text": "net.sortByRFC6724withSrcs"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/addrselect.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 72,
                        "startColumn": 28
                      }
                    },
                    "message": {
                      "text": "net.ipAttrOf"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/addrselect.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 322,
                        "startColumn": 27
                      }
                    },
                    "message": {
                      "text": "net.classifyScope"
                    }
                  }
                },
                {
                  "module": "stdlib@v1.22.0",
                  "location": {
                    "physicalLocation": {
                      "artifactLocation": {
                        "uri": "src/net/netip/netip.go",
                        "uriBaseId": "%GOROOT%"
                      },
                      "region": {
                        "startLine": 540,
                        "startColumn": 16
                      }
                    },
                    "message": {
                      "text": "net/netip.Addr.IsMulticast"
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "ruleId": "GO-2024-2888",
          "level": "note",
          "message": {
            "text": "Your code depends on 1 vulnerable module (stdlib), but doesn't appear to call any of the vulnerable symbols."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "go.mod",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1
                }
              },
              "message": {
                "text": "Findings for vulnerability GO-2024-2888"
              }
            }
          ]
        },
        {
          "ruleId": "GO-2024-2963",
          "level": "warning",
          "message": {
            "text": "Your code imports 1 vulnerable package (net/http), but doesn’t appear to call any of the vulnerable symbols."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "go.mod",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1
                }
              },
              "message": {
                "text": "Findings for vulnerability GO-2024-2963"
              }
            }
          ]
        },
        {
          "ruleId": "GO-2024-3105",
          "level": "note",
          "message": {
            "text": "Your code depends on 1 vulnerable module (stdlib), but doesn't appear to call any of the vulnerable symbols."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "go.mod",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1
                }
              },
              "message": {
                "text": "Findings for vulnerability GO-2024-3105"
              }
            }
          ]
        },
        {
          "ruleId": "GO-2024-3106",
          "level": "note",
          "message": {
            "text": "Your code depends on 1 vulnerable module (stdlib), but doesn't appear to call any of the vulnerable symbols."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "go.mod",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1
                }
              },
              "message": {
                "text": "Findings for vulnerability GO-2024-3106"
              }
            }
          ]
        },
        {
          "ruleId": "GO-2024-3107",
          "level": "note",
          "message": {
            "text": "Your code depends on 1 vulnerable module (stdlib), but doesn't appear to call any of the vulnerable symbols."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "go.mod",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1
                }
              },
              "message": {
                "text": "Findings for vulnerability GO-2024-3107"
              }
            }
          ]
        }
      ]
    }
  ]
}"
